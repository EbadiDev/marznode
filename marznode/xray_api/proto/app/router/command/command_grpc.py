# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: app/router/command/command.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import marznode.xray_api.proto.common.net.network_pb2
import marznode.xray_api.proto.app.router.command.command_pb2


class RoutingServiceBase(abc.ABC):

    @abc.abstractmethod
    async def SubscribeRoutingStats(self, stream: 'grpclib.server.Stream[app.router.command.command_pb2.SubscribeRoutingStatsRequest, app.router.command.command_pb2.RoutingContext]') -> None:
        pass

    @abc.abstractmethod
    async def TestRoute(self, stream: 'grpclib.server.Stream[app.router.command.command_pb2.TestRouteRequest, app.router.command.command_pb2.RoutingContext]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/xray.app.router.command.RoutingService/SubscribeRoutingStats': grpclib.const.Handler(
                self.SubscribeRoutingStats,
                grpclib.const.Cardinality.UNARY_STREAM,
                marznode.xray_api.proto.app.router.command.command_pb2.SubscribeRoutingStatsRequest,
                marznode.xray_api.proto.app.router.command.command_pb2.RoutingContext,
            ),
            '/xray.app.router.command.RoutingService/TestRoute': grpclib.const.Handler(
                self.TestRoute,
                grpclib.const.Cardinality.UNARY_UNARY,
                marznode.xray_api.proto.app.router.command.command_pb2.TestRouteRequest,
                marznode.xray_api.proto.app.router.command.command_pb2.RoutingContext,
            ),
        }


class RoutingServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SubscribeRoutingStats = grpclib.client.UnaryStreamMethod(
            channel,
            '/xray.app.router.command.RoutingService/SubscribeRoutingStats',
            marznode.xray_api.proto.app.router.command.command_pb2.SubscribeRoutingStatsRequest,
            marznode.xray_api.proto.app.router.command.command_pb2.RoutingContext,
        )
        self.TestRoute = grpclib.client.UnaryUnaryMethod(
            channel,
            '/xray.app.router.command.RoutingService/TestRoute',
            marznode.xray_api.proto.app.router.command.command_pb2.TestRouteRequest,
            marznode.xray_api.proto.app.router.command.command_pb2.RoutingContext,
        )
